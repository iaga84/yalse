version: '3.7'
services:
  redis:
    image: redis:latest
    restart: on-failure
    ports:
      - 6379:6379
  redis-dashboard:
    image: eoranged/rq-dashboard:latest
    environment:
      - RQ_DASHBOARD_REDIS_URL=redis://redis:6379
    depends_on:
      - redis
    ports:
      - 9181:9181
  tika:
    image: apache/tika:latest-full
    ports:
      - 9998:9998
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.1
    restart: on-failure
    environment:
      - node.name=es01
      - bootstrap.memory_lock=true
      - cluster.initial_master_nodes=es01
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    ulimits:
      nofile:
        soft: 65535
        hard: 65535
      memlock:
        soft: -1
        hard: -1
    volumes:
      - type: bind
        source: ${DATA_ELASTIC}
        target: /usr/share/elasticsearch/data
    ports:
      - 9200:9200
  db:
    image: postgres
    ports:
      - "5400:5432"
    environment:
      - POSTGRES_USER=docker
      - POSTGRES_PASSWORD=docker
    volumes:
      - ${DATA_DB}:/var/lib/postgresql/data:z
    depends_on:
      - redis
      - elasticsearch
      - tika
  db-admin:
    image: adminer
    ports:
      - 8785:8080
    depends_on:
      - db
  yalse-core:
    restart: on-failure
    build:
      context: ./yalse-core
    volumes:
      - type: bind
        source: ${LIBRARY_PATH}
        target: /documents
    entrypoint: ["gunicorn", "-w", "2","--timeout", "1200", "-b", "0.0.0.0:8000", "yalse_core.app"]
    depends_on:
      - redis
      - elasticsearch
      - db
    ports:
      - 8000:8000
  yalse-worker:
    build:
      context: ./yalse-core
    depends_on:
      - redis
      - elasticsearch
      - db
    volumes:
      - type: bind
        source: ${LIBRARY_PATH}
        target: /documents
    entrypoint: ["rq", "worker", "--url", "redis://redis:6379"]
  yalse-frontend:
    build:
      context: ./yalse-frontend
    depends_on:
      - yalse-core
    ports:
      - 8080:8080
